name: deploy

on: push

jobs:
  build-n-publish:
    runs-on: ubuntu-18.04
    if: startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Build MMCV
        run: python setup.py sdist
      - name: Publish distribution to PyPI
        run: |
          pip install twine
          twine upload dist/* -u __token__ -p ${{ secrets.pypi_password }}

  build-n-publish_with_ops:
    runs-on: ubuntu-18.04
    if: startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Build MMCV with ops
        run: |
          sed -i "s/os.getenv('MMCV_WITH_OPS', '0')/os.getenv('MMCV_WITH_OPS', '1')/g" setup.py
          python setup.py sdist
      - name: Publish distribution to PyPI
        run: |
          pip install twine
          twine upload dist/* -u __token__ -p ${{ secrets.pypi_password }}

  build_cuda_win:
    runs-on: windows-2019
    if: startsWith(github.event.ref, 'refs/tags')
    strategy:
      fail-fast: false
      matrix:
        include:
          - cuda: "11.0.167"
            python-version: 3.6
            torch: 1.7.1+cu110
            torchvision: 0.8.2+cu110
            cuda_ver: cu110
            torch_ver: 1.7.1
          - cuda: "10.2.89"
            python-version: 3.6
            torch: 1.7.1
            torchvision: 0.8.2
            cuda_ver: cu102
            torch_ver: 1.7.1
          - cuda: "10.1.243"
            python-version: 3.6
            torch: 1.7.1+cu101
            torchvision: 0.8.2+cu101
            cuda_ver: cu101
            torch_ver: 1.7.1
          - cuda: "11.0.167"
            python-version: 3.7
            torch: 1.7.1+cu110
            torchvision: 0.8.2+cu110
            cuda_ver: cu110
            torch_ver: 1.7.1
          - cuda: "10.2.89"
            python-version: 3.7
            torch: 1.7.1
            torchvision: 0.8.2
            cuda_ver: cu102
            torch_ver: 1.7.1
          - cuda: "10.1.243"
            python-version: 3.7
            torch: 1.7.1+cu101
            torchvision: 0.8.2+cu101
            cuda_ver: cu101
            torch_ver: 1.7.1
          - cuda: "11.0.167"
            python-version: 3.8
            torch: 1.7.1+cu110
            torchvision: 0.8.2+cu110
            cuda_ver: cu110
            torch_ver: 1.7.1
          - cuda: "10.2.89"
            python-version: 3.8
            torch: 1.7.1
            torchvision: 0.8.2
            cuda_ver: cu102
            torch_ver: 1.7.1
          - cuda: "10.1.243"
            python-version: 3.8
            torch: 1.7.1+cu101
            torchvision: 0.8.2+cu101
            cuda_ver: cu101
            torch_ver: 1.7.1
          - cuda: "11.0.167"
            python-version: 3.6
            torch: 1.7.0+cu110
            torchvision: 0.8.0
            cuda_ver: cu110
            torch_ver: 1.7.0
          - cuda: "10.2.89"
            python-version: 3.6
            torch: 1.7.0
            torchvision: 0.8.0
            cuda_ver: cu102
            torch_ver: 1.7.0
          - cuda: "10.1.243"
            python-version: 3.6
            torch: 1.7.0+cu101
            torchvision: 0.8.0
            cuda_ver: cu101
            torch_ver: 1.7.0
          - cuda: "11.0.167"
            python-version: 3.7
            torch: 1.7.0+cu110
            torchvision: 0.8.0
            cuda_ver: cu110
            torch_ver: 1.7.0
          - cuda: "10.2.89"
            python-version: 3.7
            torch: 1.7.0
            torchvision: 0.8.0
            cuda_ver: cu102
            torch_ver: 1.7.0
          - cuda: "10.1.243"
            python-version: 3.7
            torch: 1.7.0+cu101
            torchvision: 0.8.0
            cuda_ver: cu101
            torch_ver: 1.7.0
          - cuda: "11.0.167"
            python-version: 3.8
            torch: 1.7.0+cu110
            torchvision: 0.8.0
            cuda_ver: cu110
            torch_ver: 1.7.0
          - cuda: "10.2.89"
            python-version: 3.8
            torch: 1.7.0
            torchvision: 0.8.0
            cuda_ver: cu102
            torch_ver: 1.7.0
          - cuda: "10.1.243"
            python-version: 3.8
            torch: 1.7.0+cu101
            torchvision: 0.8.0
            cuda_ver: cu101
            torch_ver: 1.7.0
          - cuda: "10.2.89"
            python-version: 3.6
            torch: 1.6.0
            torchvision: 0.7.0
            cuda_ver: cu102
            torch_ver: 1.6.0
          - cuda: "10.1.243"
            python-version: 3.6
            torch: 1.6.0+cu101
            torchvision: 0.7.0+cu101
            cuda_ver: cu101
            torch_ver: 1.6.0
          - cuda: "10.2.89"
            python-version: 3.7
            torch: 1.6.0
            torchvision: 0.7.0
            cuda_ver: cu102
            torch_ver: 1.6.0
          - cuda: "10.1.243"
            python-version: 3.7
            torch: 1.6.0+cu101
            torchvision: 0.7.0+cu101
            cuda_ver: cu101
            torch_ver: 1.6.0
          - cuda: "10.2.89"
            python-version: 3.8
            torch: 1.6.0
            torchvision: 0.7.0
            cuda_ver: cu102
            torch_ver: 1.6.0
          - cuda: "10.1.243"
            python-version: 3.8
            torch: 1.6.0+cu101
            torchvision: 0.7.0+cu101
            cuda_ver: cu101
            torch_ver: 1.6.0
    env:
      os: windows-2019
      visual_studio: "Visual Studio 16 2019"
      build_dir: "build"
      config: "Release"
      FORCE_CUDA: 1
      MMCV_CUDA_ARGS: -gencode=arch=compute_61,code=sm_61
      DISTUTILS_USE_SDK: 1
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Env
        shell: powershell
        run: |
          $env:mmcv_version = "${{ matrix.torch }}"
          Write-Host $version
      - name: Setup cl.exe
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
      - name: Install CUDA
        env:
          cuda: ${{ matrix.cuda }}
          visual_studio: ${{ matrix.visual_studio }}
        shell: powershell
        run: |
          # Install CUDA via a powershell script
          .\scripts\actions\install_cuda_windows.ps1
          if ($?) {
            # Set paths for subsequent steps, using $env:CUDA_PATH
            echo "Adding CUDA to CUDA_PATH, CUDA_PATH_X_Y and PATH"
            echo "CUDA_PATH=$env:CUDA_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            echo "$env:CUDA_PATH_VX_Y=$env:CUDA_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            echo "$env:CUDA_PATH/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          }
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Patch Pytorch
        if: ${{matrix.cuda == '10.2.89' || matrix.cuda == '10.1.243'}}
        shell: bash
        run: |
          SITE="$(python -c 'import torch; print(torch.__file__[:-18])')"
          sed -i.bak -e 's/CONSTEXPR_EXCEPT_WIN_CUDA/const/g' "${SITE}/torch/include/torch/csrc/jit/api/module.h"
          sed -i.bak -e 's/return \*(this->value)/return \*((type\*)this->value)/g' "${SITE}/torch/include/pybind11/cast.h"
          sed -i.bak '/static constexpr Symbol Kind/d' "${SITE}/torch/include/torch/csrc/jit/ir/ir.h"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install wheel
      - name: build
        run: |
          $env:mmcv_version = "${{ matrix.torch }}"
          python setup.py bdist_wheel
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Copy files to the test website with the AWS CLI
        run: |
          aws s3 cp ./dist/ s3://volta-vone/${{ matrix.cuda_ver}}/torch${{ matrix.torch_ver }} --recursive
